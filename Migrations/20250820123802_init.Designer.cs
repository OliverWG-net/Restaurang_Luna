// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurang_luna.Data;

#nullable disable

namespace Restaurang_luna.Migrations
{
    [DbContext(typeof(LunaDbContext))]
    [Migration("20250820123802_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Resturang_luna.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f4f1a1e-3a08-4f6a-9a8b-6b2a7d2c4f10"),
                            PasswordHash = "G/ZurCUC4QMRDqXwZwQRsA==;ULAG2GRXijaJasIKRhSJUTZtZQGTsAm3UTjPE7xsEBY=",
                            UserName = "Oliver"
                        });
                });

            modelBuilder.Entity("Resturang_luna.Models.Booking", b =>
                {
                    b.Property<Guid>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GuestAmount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TableId_FK")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId_FK");

                    b.HasIndex("StartAt");

                    b.HasIndex("TableId_FK");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = new Guid("d6a6d2f0-1f44-4b77-9b6c-0c9d1a2b3c4d"),
                            CustomerId_FK = new Guid("b5b55e03-2d42-4b64-9a1d-3a4fd0a9e6a1"),
                            GuestAmount = 2,
                            StartAt = new DateTimeOffset(new DateTime(2025, 9, 1, 17, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TableId_FK = 1
                        },
                        new
                        {
                            BookingId = new Guid("a2b3c4d5-e6f7-4a89-9b01-23456789abcd"),
                            CustomerId_FK = new Guid("a1c7d3a6-8b10-4a1f-90a4-7f2f0d9b1234"),
                            GuestAmount = 4,
                            StartAt = new DateTimeOffset(new DateTime(2025, 9, 2, 18, 30, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TableId_FK = 2
                        },
                        new
                        {
                            BookingId = new Guid("f1e2d3c4-b5a6-4789-8123-9abcdeff0011"),
                            CustomerId_FK = new Guid("c9e2f4b1-7a27-4c9c-8b3b-0b4c8a7f55e2"),
                            GuestAmount = 6,
                            StartAt = new DateTimeOffset(new DateTime(2025, 9, 3, 19, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TableId_FK = 4
                        });
                });

            modelBuilder.Entity("Resturang_luna.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("b5b55e03-2d42-4b64-9a1d-3a4fd0a9e6a1"),
                            FirstName = "Alice",
                            LastName = "Johansson",
                            PhoneNumber = "+46701234567"
                        },
                        new
                        {
                            CustomerId = new Guid("a1c7d3a6-8b10-4a1f-90a4-7f2f0d9b1234"),
                            FirstName = "Bob",
                            LastName = "Svensson",
                            PhoneNumber = "+46709876543"
                        },
                        new
                        {
                            CustomerId = new Guid("c9e2f4b1-7a27-4c9c-8b3b-0b4c8a7f55e2"),
                            FirstName = "Klara",
                            PhoneNumber = "+46855500010"
                        });
                });

            modelBuilder.Entity("Resturang_luna.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("MenuItem")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PicutreUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("MenuId");

                    b.HasIndex("MenuItem");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Description = "Classic pasta with creamy egg sauce, pancetta, and parmesan.",
                            IsPopular = true,
                            MenuItem = "Spaghetti Carbonara",
                            PicutreUrl = "https://vasterbottensost.com/wp-content/uploads/2025/03/carbonara.jpg",
                            Price = 120.0
                        },
                        new
                        {
                            MenuId = 2,
                            Description = "Spicy tomato sauce with garlic, chili, and fresh parsley.",
                            IsPopular = false,
                            MenuItem = "Penne Arrabbiata",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS-3mx7DCimLIn1_B7a5JbY8SvzPT4jpahzeQ&s",
                            Price = 100.0
                        },
                        new
                        {
                            MenuId = 3,
                            Description = "Rich butter and parmesan sauce with silky fettuccine pasta.",
                            IsPopular = true,
                            MenuItem = "Fettuccine Alfredo",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpfJYxux157r0GogK-XhDhxjnTvmQYVgaPUg&s",
                            Price = 140.0
                        },
                        new
                        {
                            MenuId = 4,
                            Description = "Layered pasta with beef ragù, béchamel, and parmesan.",
                            IsPopular = true,
                            MenuItem = "Lasagna Bolognese",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRkkjn3cMbzsNByc3-WkOob9H0c3ioINWgE5g&s",
                            Price = 160.0
                        },
                        new
                        {
                            MenuId = 5,
                            Description = "Wood-fired pizza with tomato, mozzarella, and fresh basil.",
                            IsPopular = true,
                            MenuItem = "Margherita Pizza",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpBDIHxbtMe_C5SJhO2AujarCzMCKXQpO6Qw&s",
                            Price = 110.0
                        },
                        new
                        {
                            MenuId = 6,
                            Description = "Full-bodied Italian red wine, served by the glass.",
                            IsPopular = false,
                            MenuItem = "Red Wine (Glass)",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTLeLeVxyjldu8sSuMuPdL3EgzMT8Y68uWECg&s",
                            Price = 75.0
                        },
                        new
                        {
                            MenuId = 7,
                            Description = "Crisp Italian white wine, served chilled by the glass.",
                            IsPopular = false,
                            MenuItem = "White Wine (Glass)",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSiRqs99I_sHPJ6eWHmEKrMYo66ZWYNLDNnqg&s",
                            Price = 75.0
                        },
                        new
                        {
                            MenuId = 8,
                            Description = "Strong Italian coffee served in a small cup.",
                            IsPopular = true,
                            MenuItem = "Espresso",
                            PicutreUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqpOw-kv9-J1OzjJICx_KZEU-KhhLYfYKF1w&s",
                            Price = 40.0
                        },
                        new
                        {
                            MenuId = 9,
                            Description = "Classic Italian dessert with mascarpone and espresso.",
                            IsPopular = true,
                            MenuItem = "Tiramisu",
                            PicutreUrl = "https://staticcookist.akamaized.net/wp-content/uploads/sites/22/2024/09/THUMB-VIDEO-2_rev1-56.jpeg",
                            Price = 90.0
                        });
                });

            modelBuilder.Entity("Resturang_luna.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("TableNr")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("TableNr");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 2,
                            TableNr = 1
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 4,
                            TableNr = 2
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 4,
                            TableNr = 3
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 6,
                            TableNr = 4
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 8,
                            TableNr = 5
                        });
                });

            modelBuilder.Entity("Resturang_luna.Models.Booking", b =>
                {
                    b.HasOne("Resturang_luna.Models.Customer", "Customer")
                        .WithMany("Booking")
                        .HasForeignKey("CustomerId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resturang_luna.Models.Table", "Table")
                        .WithMany("Booking")
                        .HasForeignKey("TableId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Resturang_luna.Models.Customer", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Resturang_luna.Models.Table", b =>
                {
                    b.Navigation("Booking");
                });
#pragma warning restore 612, 618
        }
    }
}
